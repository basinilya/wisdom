Q: negation
A: (!(cond))

Q: Use of uninitialized value
A: 
  check:if defined $x
  assign default value: $x //= "default";

Q: split keep delimiter
A:
  $s = "Item1sUfFiXpReFiXItem2sUfFiXpReFiXItem3";
  foreach my $item (split(/(?<=sUfFiX)(?=pReFiX)/, $s)) { print "'", $item, "'\n"; }

  The RE for the part of the delimiter that should be the PREFIX of an item can
  be wrapped in a lookahead group:
  (?=pReFiX)
  The RE for the part of the delimiter that should be the SUFFIX of an item can
  be wrapped in a lookbehind group:
  (?<=sUfFiX)
  Important: lookbehind can't into variable-length matches

Q: read whole file
A: 
  my $content;
  {
    local *FH;
    open FH, "$ARGV[0]" or die $!;
    -f FH and sysread FH, $content, -s FH;
  }


Q: compare numbers
A: 

Q: cast to number
A: No way, even 0+$s don't work

Q: compare numbers
A: ==

Q: array size
A: @a in scalar context, e.g.: print 0 + @a;

Q: pass array
A: 
    mysub(@a);
    is the same thing as
    mysub($a[0], $a[1], $a[2], ...);

    use references, if want to pass two arrays

: ?
A:
use Data::Dumper;
print Dumper($foo, $bar);

Q: replace
A:
$x = "Time to feed the cat!";
$x =~ s/cat/hacker/;   # $x contains "Time to feed the hacker!"

Q: break
A: last

Q   interactive mode
A:
    perl -d -e 1
    or even
    rlwrap perl -d -e 1


Q: exact match regex
A:
set -- perl -e 'my $word = $ARGV[1]; my $exact = qr/\Q$word\E/; $exact = substr($exact,index($exact,":")+1, -1); print $exact;' x x 'obj.method()'

    \Q quote (disable) pattern metacharacters till \E or
    end of string
    \E	end either case modification or quoted section
    (whichever was last seen)

Q:
A:
 ѕроблемы с LWP::Useragent протокола https и ошибка "501 Not Implemented"
Ќу вот и € нарвалс€ на странную работу модул€ LWP::Useragent через прокси, а именно по https запросу, проксик выдал "501 Not Implemented"
но это если объ€вить работу через прокси

$ua->proxy(['http', 'https'], 'http://xxxxx.xxx.xxx:3128/');

¬се начинает работать, только если закоментировать объ€вление proxy и определить пр€мо в скрипте переменную среды дл€ прокси:

$ENV{HTTPS_PROXY} = $proxy;
$ENV{HTTPS_PROXY_USERNAME} = user;
$ENV{HTTPS_PROXY_PASSWORD} = pass;

”читыва€, что дл€ работы требуетс€ внешн€€ библиотека OpenSSL это вполне логично, откуда ей знать о проксиках объ€вленных в Userageny, но все же это насто€щие грабли! 


Q:
^sub ([^ ]*) \{
sub \1 {\n  ::mytrace_wrapper("\1", \\&_real_\1, @_);\n}\n\nsub _real_\1 {
