Q: change sysobject type (convert to another type)
A:
  CHANGE current_type [(ALL)] OBJECT[S]
  TO new_type[update_list]
  [IN ASSEMBLY document_id [VERSION version_label] [DESCEND]]
  [SEARCH fulltext search condition]
  [WHERE qualification]

Q: list object aspects
A: select r_aspect_name from dm_sysobject where ...

Q: list default type aspects
A: select ti.r_object_id, ti.default_aspects, ti.r_type_name from dmi_type_info ti where ti.r_type_name = '...';

Q: drop aspect
A:

  -- select sysobjects having r_aspect_name[1] = 'tst_auditaspect'
  select r_object_id, -1 - i_position from dm_sysobject (all) where r_aspect_name = 'tst_auditaspect' and i_position = -2 enable (ROW_BASED) ;
  
  -- remove aspect from sysobjects having r_aspect_name[1] = 'tst_auditaspect'
  update dm_sysobject (all) objects remove r_aspect_name[1] where r_object_id in( '0801e24080086229' );
  
  -- unlink the jars from aspect
  update dm_sysobject (all) objects unlink '/System/Modules/Aspect/tst_auditaspect' where folder('/System/Modules/Aspect/tst_auditaspect', descend) and i_reference_cnt > 1;
  update dm_sysobject (all) objects unlink '/System/Modules/Aspect/tst/tst_auditaspect' where folder('/System/Modules/Aspect/tst/tst_auditaspect', descend) and i_reference_cnt > 1;
  
  -- remove aspect configuration
  delete dm_sysobject (all) objects where folder('/System/Modules/Aspect/tst_auditaspect', descend) and i_reference_cnt = 1;
  delete dm_sysobject (all) objects where folder('/System/Modules/Aspect/tst/tst_auditaspect', descend) and i_reference_cnt = 1;
  
  -- delete aspect
  delete dmc_aspect_type (all) objects where object_name = 'tst_auditaspect';



Q: add default aspect
A:
  alter type tst_par2chld add default aspects 'sync_x_relation'

Q: "You have specified a non-integer token in an ORDER BY clause with UNION."
A: sort with: "enable (RETURN_RANGE)".
  Due to the bug, sorting may be unreliable: in generated sql index in 'order by <index>'
  is not equal to index of dm_rnum.

Q: top or limit
A: ... enable(return_top 10);
    see: enable (RETURN_range  <start+1> <limit> '<sortcol> <sortord>')



Q: date in utc
A: select DATE('2020-12-31 12:00:00utc', 'yyyy-mm-dd hh:mi:ss') from dm_docbase_config ;

Q: dual
A: select date(now) as x from dm_docbase_config

Q: dm_relation has no r_object_type, but relation_name may differ from its actual type
A:
  select * from dm_type where i_type in(
  select i_type from dm_dbo.DMI_OBJECT_TYPE where r_object_id in(
  select r_object_id from dm_relation where relation_name = 'dm_bof_dependencies' 
  )
  )
  ;

Q: set null
A: 
datecolumn = date('NULLDATE')
, strcolumn1 = ' '
, strcolumn2 = '' -- same as above

Q: select nulldate
A: select date('01/01/1753utc') from dm_docbase_config;

Q: select null
A: not supported, you can select '' for NULLSTRING or select 0 for NULLINT

Q: check for null
A:
  - In WHERE / LEFT JOIN conditions

  If what you want is to check for empty value use:
  IS [NOT] NULLDATE (checks for null or special 17xx year)
    NULLSTRING (translated to Oracle SQL: (field is null or field = ' ') )
    NULLINT (null or 0)
    NULLID (?)

  If you want real nulls in condition, use:
  IS [NOT] NULL

  - In result column
  
  The API won't allow you to tell DB NULL from empty
  The workaround is to use special arithmetics in SELECT.

  For string:
  SELECT ASCII(colname)+1, because ASCII(NULL)+1 always returns 0

  For int:
  colname*0 + 1


!!! = '' always false (except for corrupt rows) !!! Documentum never stores an empty string or NULL in the varchar db column, only one blank character

